name: Deploy Production
on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'FTP dry run'
        required: true
        type: boolean
        default: true
      cleanup:
        description: 'FTP cleanup'
        required: true
        type: boolean
        default: false
env:
  USER: ${{ vars.DEPLOY_PROD_USER }}
  TARGET: "/var/www/odbierz-nagrode.pl/"
  ENV: prod
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js environment
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - run: |
        corepack enable &&
        corepack install # use the in-repo yarn version
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: "yarn"
    - run: yarn install --frozen-lockfile --network-timeout 1000000000
    - name: generate_api_env
      run: printf "API_KEY=${{ secrets.API_KEY }}\nS_KEY=${{ secrets.S_KEY }}\nUID=${{vars.UID}}\nALLOWED_DOMAIN=${{vars.PROD_DOMAIN}}" >> public/inc/.env
    - name: generate_app_env
      run: printf "NUXT_PUBLIC_ENVIRONMENT=${{ env.ENV }}\nNUXT_PUBLIC_SENTRYDSN=${{ secrets.SENTRY_DSN }}" >> .env
    - name: build
      run: yarn run generate
    - name: rsync h1.salelifter.pl
      uses: up9cloud/action-rsync@master
      env:
        HOST: h1.salelifter.pl
        PORT: 20022
        KEY: ${{ secrets.DEPLOYER_KEY }}
        USER: ${{ env.USER }}
        VERBOSE: true
        TARGET: "${{ env.TARGET }}"
        ARGS: "-avzogO --delete "
        SOURCE: ./.output/public/
    - name: rsync h2.salelifter.pl
      uses: up9cloud/action-rsync@master
      env:
        HOST: h2.salelifter.pl
        PORT: 20022
        KEY: ${{ secrets.DEPLOYER_KEY }}
        USER: ${{ env.USER }}
        VERBOSE: true
        TARGET: "${{ env.TARGET }}"
        ARGS: "-avzogO --delete "
        SOURCE: ./.output/public/